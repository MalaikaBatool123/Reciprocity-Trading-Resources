PERCEPTRON

X = np.array([
[-2, 4],
[4, 1],
[1, 6],
[2, 4],
[6, 2] ])
Next we fold a bias term -1 into the data set. This is needed for the SGD to work.
X = np.array([
[-2,4,-1],
[4,1,-1],
[1, 6, -1],
[2, 4, -1],
[6, 2, -1], ])
y = np.array([-1,-1,1,1,1])
def perceptron_sgd_plot(X, Y):
w = np.zeros(len(X[0]))
eta = 1
n = 30
errors = []
for t in range(n):
total_error = 0
for i, x in enumerate(X):
if (np.dot(X[i], w)*Y[i]) <= 0:
total_error += (np.dot(X[i],w)*Y[i])
w = w + eta*X[i]*Y[i]
errors.append(total_error*-1)
plt.figure()
plt.plot(errors)
plt.xlabel('Epoch')
plt.ylabel('Total Loss')
return w
print(perceptron_sgd_plot(X,y))